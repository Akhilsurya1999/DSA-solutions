class Solution {
public:
    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {
        int n=mat[0].size();
        vector<int>ans1;
    vector<pair<int,int>>p;
        int m=mat.size();
 
        for(int i=0;i<m;i++)
        {
            int cnt=0;
            for(int j=0;j<n;j++)
            {
                if(mat[i][j]==1)cnt++;
            }
           auto x = make_pair(cnt,i);
            p.push_back(x);
        }
        sort(p.begin(),p.end());
          int cn1=0;
        for(auto it=p.begin();it!=p.end();it++)
        {
            if(cn1 <k){
            ans1.push_back( it->second);
            cn1++;
          }
            else break;
        }
        return ans1;
    }
};
